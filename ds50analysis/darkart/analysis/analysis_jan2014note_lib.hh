/*

  Suite of functions to be used in analysis macros.

*/

#ifndef analysis_jan2014note_lib_hh
#define analysis_jan2014note_lib_hh

#include <vector>
#include <string>
#include <fstream>


#include "TFile.h"
#include "TGraph.h"
#include "TChain.h"
#include "TH1F.h"
#include "TH2F.h"
#include "TProfile.h"
#include "TMath.h"
#include "TNtuple.h"
#include "TString.h"

#include "../darkart/Products/EventData.hh"


using namespace std;
using namespace darkart;


namespace ds50analysis {
  
  // Geometrical correction factor for S1.
  Double_t s1_corr_factor(Double_t t_drift_max, Double_t t_drift);

  // Identify the number of physical pulses and, if possible, S1 pulse ID and S2 pulse ID.
  void identify_pulses(EventData* event,
                       Int_t & n_phys_pulses, Int_t & s1_pulse_id, Int_t & s2_pulse_id,
                       Double_t t_drift_max, Double_t t_drift_delta);


  // max_chan calculation in DarkArt uses npe and not npe_fixed
  // --> must recalculate here using fixed_int params
  void max_s1_s2(EventData* event, Int_t const s1_pulse_id, Int_t const s2_pulse_id,
                 Int_t & max_s1_chan, Double_t & max_s1,
                 Int_t & max_s2_chan, Double_t & max_s2);


  // Cut on large max_s1_frac. Threshold is defined bin by bin.
  Bool_t large_max_s1_frac(Double_t const total_s1, Double_t const t_drift, Double_t const max_s1);


}








Double_t ds50analysis::s1_corr_factor(Double_t t_drift_max, Double_t t_drift)
{
  Double_t t_drift_ratio = t_drift/(0.5*t_drift_max); // note normalization is to 0.5*t_drift_max
  // looked at Kr peaks in 25us drift-time windows (Run5330+5340), and fit these to [0]*t_drift_ratio^2 + [1]*t_drift_ratio + [2].
  Double_t fit_par0 = 2.475; 
  Double_t fit_par1 = 14.920;
  Double_t fit_par2 = 272.58;
  // normalizing all points on fitted curve to expected Kr peak at t_drift_max/2
  Double_t exp_Kr_peak_at_half_t_drift_max = fit_par0 + fit_par1 + fit_par2;
  Double_t exp_Kr_peak_at_t_drift = fit_par0*t_drift_ratio*t_drift_ratio + fit_par1*t_drift_ratio + fit_par2;
  return exp_Kr_peak_at_half_t_drift_max/exp_Kr_peak_at_t_drift; // s1 correction factor
}



void ds50analysis::identify_pulses(EventData* event,
                                   Int_t & n_phys_pulses, Int_t & s1_pulse_id, Int_t & s2_pulse_id,
                                   Double_t t_drift_max, Double_t t_drift_delta)
{
  if (event->sumchannel.pulses.size() == 0)
    {
      n_phys_pulses = 0;
    }
  else if (event->sumchannel.pulses.size() == 1)
    {
      //Assume pulse is S1 ... for now
      n_phys_pulses = 1;
      s1_pulse_id = 0;
    }
  else if (event->sumchannel.pulses.size() == 2)
    {
      //Assume first pulse is S1 and second is S2 ... for now
      n_phys_pulses = 2;
      s1_pulse_id = 0;
      s2_pulse_id = 1;
    }
  else if (event->sumchannel.pulses.size() == 3
           && std::fabs(event->sumchannel.pulses[2].pulse.start_time
                        - event->sumchannel.pulses[1].pulse.start_time
                        - t_drift_max) < t_drift_delta)
    {
      //Assume first pulse is S1, second is S2 and third is S3 ... for now
      n_phys_pulses = 2;
      s1_pulse_id = 0;
      s2_pulse_id  = 1;
    }
  else
    { //We don't know how many physical pulses - just set to total number of pulses for now
      n_phys_pulses = event->sumchannel.pulses.size();
    }
}

void ds50analysis::max_s1_s2(EventData* event, Int_t const s1_pulse_id, Int_t const s2_pulse_id,
                             Int_t & max_s1_chan, Double_t & max_s1,
                             Int_t & max_s2_chan, Double_t & max_s2)
{
  const Int_t nchans = event->channels.size();
  for (Int_t ch = 0; ch < nchans; ch++)
    {
      ChannelData const& channel = event->getChannelByID(ch);
      Double_t s1 = -channel.pulses[s1_pulse_id].param.fixed_int1 / channel.pmt.spe_mean;
      Double_t s2 = -channel.pulses[s2_pulse_id].param.fixed_int2 / channel.pmt.spe_mean;
      if (s1 > max_s1)
        {
          max_s1 = s1;
          max_s1_chan = ch;
        }
      if (s2 > max_s2)
        {
          max_s2 = s2;
          max_s2_chan = ch;
        }
    }
  
}


Bool_t ds50analysis::large_max_s1_frac(Double_t const total_s1, Double_t const t_drift, Double_t const max_s1)
{

  // max_s1_frac thresholds defined for each of 37 (10us wide) tdrift slices between 0 and 370 us. Each slice is 110 points,
  // one for each total_s1 value between 10pe and 120pe. For total_s1 > 120pe, use the 120pe threshold.
  double max_s1_frac_thresholds[37][110] = 
    {{0.456, 0.437, 0.421, 0.407, 0.394, 0.383, 0.373, 0.363, 0.355, 0.348, 0.341, 0.334, 0.328, 0.323, 0.318, 0.313, 0.309, 0.305, 0.301, 0.297, 0.294, 0.29, 0.287, 0.284, 0.281, 0.279, 0.276, 0.274, 0.272, 0.269, 0.267, 0.265, 0.263, 0.261, 0.26, 0.258, 0.256, 0.254, 0.253, 0.251, 0.25, 0.249, 0.247, 0.246, 0.245, 0.243, 0.242, 0.241, 0.24, 0.239, 0.238, 0.236, 0.235, 0.234, 0.233, 0.232, 0.232, 0.231, 0.23, 0.229, 0.228, 0.227, 0.226, 0.226, 0.225, 0.224, 0.223, 0.223, 0.222, 0.221, 0.22, 0.22, 0.219, 0.218, 0.218, 0.217, 0.217, 0.216, 0.215, 0.215, 0.214, 0.214, 0.213, 0.213, 0.212, 0.212, 0.211, 0.211, 0.21, 0.21, 0.209, 0.209, 0.208, 0.208, 0.207, 0.207, 0.206, 0.206, 0.205, 0.205, 0.205, 0.204, 0.204, 0.203, 0.203, 0.203, 0.202, 0.202, 0.201, 0.201 },
     {0.436, 0.417, 0.401, 0.387, 0.374, 0.363, 0.353, 0.344, 0.336, 0.329, 0.322, 0.315, 0.309, 0.304, 0.299, 0.294, 0.29, 0.286, 0.282, 0.278, 0.275, 0.272, 0.269, 0.266, 0.263, 0.26, 0.258, 0.255, 0.253, 0.251, 0.249, 0.247, 0.245, 0.243, 0.241, 0.24, 0.238, 0.236, 0.235, 0.233, 0.232, 0.231, 0.229, 0.228, 0.227, 0.225, 0.224, 0.223, 0.222, 0.221, 0.22, 0.219, 0.218, 0.217, 0.216, 0.215, 0.214, 0.213, 0.212, 0.211, 0.211, 0.21, 0.209, 0.208, 0.208, 0.207, 0.206, 0.205, 0.205, 0.204, 0.203, 0.203, 0.202, 0.201, 0.201, 0.2, 0.2, 0.199, 0.199, 0.198, 0.197, 0.197, 0.196, 0.196, 0.195, 0.195, 0.194, 0.194, 0.193, 0.193, 0.192, 0.192, 0.191, 0.191, 0.191, 0.19, 0.19, 0.189, 0.189, 0.188, 0.188, 0.188, 0.187, 0.187, 0.187, 0.186, 0.186, 0.185, 0.185, 0.185 },
     {0.421, 0.402, 0.386, 0.372, 0.36, 0.349, 0.339, 0.33, 0.322, 0.314, 0.307, 0.301, 0.295, 0.29, 0.285, 0.28, 0.276, 0.272, 0.268, 0.264, 0.261, 0.258, 0.255, 0.252, 0.249, 0.246, 0.244, 0.242, 0.239, 0.237, 0.235, 0.233, 0.231, 0.229, 0.228, 0.226, 0.224, 0.223, 0.221, 0.22, 0.218, 0.217, 0.216, 0.214, 0.213, 0.212, 0.211, 0.21, 0.209, 0.208, 0.207, 0.206, 0.205, 0.204, 0.203, 0.202, 0.201, 0.2, 0.199, 0.198, 0.198, 0.197, 0.196, 0.195, 0.195, 0.194, 0.193, 0.192, 0.192, 0.191, 0.191, 0.19, 0.189, 0.189, 0.188, 0.187, 0.187, 0.186, 0.186, 0.185, 0.185, 0.184, 0.184, 0.183, 0.183, 0.182, 0.182, 0.181, 0.181, 0.18, 0.18, 0.179, 0.179, 0.179, 0.178, 0.178, 0.177, 0.177, 0.176, 0.176, 0.176, 0.175, 0.175, 0.175, 0.174, 0.174, 0.173, 0.173, 0.173, 0.172 },
     {0.412, 0.394, 0.378, 0.364, 0.352, 0.341, 0.331, 0.322, 0.314, 0.306, 0.3, 0.293, 0.288, 0.282, 0.277, 0.272, 0.268, 0.264, 0.26, 0.257, 0.253, 0.25, 0.247, 0.244, 0.241, 0.239, 0.236, 0.234, 0.232, 0.229, 0.227, 0.225, 0.224, 0.222, 0.22, 0.218, 0.217, 0.215, 0.214, 0.212, 0.211, 0.21, 0.208, 0.207, 0.206, 0.205, 0.203, 0.202, 0.201, 0.2, 0.199, 0.198, 0.197, 0.196, 0.195, 0.194, 0.194, 0.193, 0.192, 0.191, 0.19, 0.19, 0.189, 0.188, 0.187, 0.187, 0.186, 0.185, 0.185, 0.184, 0.183, 0.183, 0.182, 0.181, 0.181, 0.18, 0.18, 0.179, 0.179, 0.178, 0.178, 0.177, 0.177, 0.176, 0.176, 0.175, 0.175, 0.174, 0.174, 0.173, 0.173, 0.172, 0.172, 0.172, 0.171, 0.171, 0.17, 0.17, 0.17, 0.169, 0.169, 0.168, 0.168, 0.168, 0.167, 0.167, 0.167, 0.166, 0.166, 0.166 },
     {0.399, 0.381, 0.365, 0.352, 0.34, 0.329, 0.319, 0.31, 0.302, 0.295, 0.288, 0.281, 0.276, 0.27, 0.265, 0.261, 0.256, 0.252, 0.248, 0.245, 0.241, 0.238, 0.235, 0.232, 0.23, 0.227, 0.225, 0.222, 0.22, 0.218, 0.216, 0.214, 0.212, 0.21, 0.208, 0.207, 0.205, 0.204, 0.202, 0.201, 0.199, 0.198, 0.197, 0.195, 0.194, 0.193, 0.192, 0.191, 0.19, 0.189, 0.188, 0.187, 0.186, 0.185, 0.184, 0.183, 0.182, 0.181, 0.181, 0.18, 0.179, 0.178, 0.178, 0.177, 0.176, 0.175, 0.175, 0.174, 0.174, 0.173, 0.172, 0.172, 0.171, 0.17, 0.17, 0.169, 0.169, 0.168, 0.168, 0.167, 0.167, 0.166, 0.166, 0.165, 0.165, 0.164, 0.164, 0.163, 0.163, 0.163, 0.162, 0.162, 0.161, 0.161, 0.16, 0.16, 0.16, 0.159, 0.159, 0.158, 0.158, 0.158, 0.157, 0.157, 0.157, 0.156, 0.156, 0.156, 0.155, 0.155 },
     {0.395, 0.377, 0.362, 0.348, 0.336, 0.325, 0.315, 0.306, 0.298, 0.291, 0.284, 0.278, 0.272, 0.267, 0.262, 0.257, 0.253, 0.249, 0.245, 0.241, 0.238, 0.235, 0.232, 0.229, 0.226, 0.223, 0.221, 0.218, 0.216, 0.214, 0.212, 0.21, 0.208, 0.206, 0.205, 0.203, 0.201, 0.2, 0.198, 0.197, 0.196, 0.194, 0.193, 0.192, 0.191, 0.189, 0.188, 0.187, 0.186, 0.185, 0.184, 0.183, 0.182, 0.181, 0.18, 0.18, 0.179, 0.178, 0.177, 0.176, 0.176, 0.175, 0.174, 0.173, 0.173, 0.172, 0.171, 0.171, 0.17, 0.169, 0.169, 0.168, 0.168, 0.167, 0.166, 0.166, 0.165, 0.165, 0.164, 0.164, 0.163, 0.163, 0.162, 0.162, 0.161, 0.161, 0.16, 0.16, 0.16, 0.159, 0.159, 0.158, 0.158, 0.157, 0.157, 0.157, 0.156, 0.156, 0.155, 0.155, 0.155, 0.154, 0.154, 0.154, 0.153, 0.153, 0.153, 0.152, 0.152, 0.152 },
     {0.385, 0.368, 0.352, 0.339, 0.327, 0.316, 0.306, 0.297, 0.289, 0.282, 0.275, 0.269, 0.263, 0.258, 0.253, 0.248, 0.244, 0.24, 0.236, 0.233, 0.229, 0.226, 0.223, 0.22, 0.217, 0.215, 0.212, 0.21, 0.208, 0.206, 0.203, 0.202, 0.2, 0.198, 0.196, 0.194, 0.193, 0.191, 0.19, 0.188, 0.187, 0.186, 0.184, 0.183, 0.182, 0.181, 0.18, 0.179, 0.178, 0.177, 0.176, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.169, 0.168, 0.167, 0.166, 0.166, 0.165, 0.164, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.16, 0.159, 0.159, 0.158, 0.158, 0.157, 0.157, 0.156, 0.156, 0.155, 0.155, 0.154, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.147, 0.146, 0.146, 0.146, 0.145, 0.145, 0.145, 0.144, 0.144, 0.144 },
     {0.38, 0.362, 0.347, 0.334, 0.322, 0.311, 0.301, 0.293, 0.285, 0.277, 0.271, 0.265, 0.259, 0.253, 0.248, 0.244, 0.239, 0.235, 0.232, 0.228, 0.225, 0.221, 0.218, 0.215, 0.213, 0.21, 0.208, 0.205, 0.203, 0.201, 0.199, 0.197, 0.195, 0.193, 0.191, 0.19, 0.188, 0.187, 0.185, 0.184, 0.182, 0.181, 0.18, 0.179, 0.177, 0.176, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.166, 0.165, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.16, 0.159, 0.158, 0.158, 0.157, 0.156, 0.156, 0.155, 0.155, 0.154, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139 },
     {0.378, 0.361, 0.345, 0.332, 0.32, 0.309, 0.3, 0.291, 0.283, 0.276, 0.269, 0.263, 0.257, 0.252, 0.247, 0.242, 0.238, 0.234, 0.23, 0.226, 0.223, 0.22, 0.217, 0.214, 0.211, 0.208, 0.206, 0.204, 0.201, 0.199, 0.197, 0.195, 0.193, 0.192, 0.19, 0.188, 0.187, 0.185, 0.184, 0.182, 0.181, 0.179, 0.178, 0.177, 0.176, 0.175, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.167, 0.166, 0.165, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.159, 0.159, 0.158, 0.157, 0.157, 0.156, 0.156, 0.155, 0.154, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.15, 0.15, 0.149, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138 },
     {0.379, 0.362, 0.346, 0.333, 0.321, 0.31, 0.301, 0.292, 0.284, 0.277, 0.27, 0.264, 0.258, 0.253, 0.248, 0.243, 0.239, 0.235, 0.231, 0.227, 0.224, 0.221, 0.218, 0.215, 0.212, 0.209, 0.207, 0.204, 0.202, 0.2, 0.198, 0.196, 0.194, 0.192, 0.191, 0.189, 0.187, 0.186, 0.184, 0.183, 0.182, 0.18, 0.179, 0.178, 0.177, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.167, 0.166, 0.165, 0.164, 0.163, 0.163, 0.162, 0.161, 0.16, 0.16, 0.159, 0.158, 0.158, 0.157, 0.156, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.139 },
     {0.376, 0.359, 0.344, 0.33, 0.318, 0.308, 0.298, 0.29, 0.282, 0.274, 0.268, 0.261, 0.256, 0.25, 0.245, 0.241, 0.236, 0.232, 0.228, 0.225, 0.221, 0.218, 0.215, 0.212, 0.209, 0.207, 0.204, 0.202, 0.2, 0.198, 0.196, 0.194, 0.192, 0.19, 0.188, 0.187, 0.185, 0.183, 0.182, 0.181, 0.179, 0.178, 0.177, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.159, 0.159, 0.158, 0.157, 0.156, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.136 },
     {0.376, 0.358, 0.343, 0.33, 0.318, 0.307, 0.298, 0.289, 0.281, 0.274, 0.267, 0.261, 0.255, 0.25, 0.245, 0.24, 0.236, 0.232, 0.228, 0.224, 0.221, 0.218, 0.214, 0.212, 0.209, 0.206, 0.204, 0.201, 0.199, 0.197, 0.195, 0.193, 0.191, 0.189, 0.188, 0.186, 0.184, 0.183, 0.181, 0.18, 0.179, 0.177, 0.176, 0.175, 0.174, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.163, 0.162, 0.161, 0.16, 0.159, 0.159, 0.158, 0.157, 0.157, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.144, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.136, 0.136, 0.136 },
     {0.373, 0.355, 0.34, 0.327, 0.315, 0.305, 0.295, 0.286, 0.278, 0.271, 0.264, 0.258, 0.252, 0.247, 0.242, 0.237, 0.233, 0.229, 0.225, 0.222, 0.218, 0.215, 0.212, 0.209, 0.206, 0.204, 0.201, 0.199, 0.197, 0.194, 0.192, 0.19, 0.188, 0.187, 0.185, 0.183, 0.182, 0.18, 0.179, 0.177, 0.176, 0.175, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.166, 0.165, 0.164, 0.164, 0.163, 0.162, 0.161, 0.16, 0.159, 0.158, 0.158, 0.157, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.151, 0.151, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.136, 0.136, 0.136, 0.135, 0.135, 0.135, 0.134, 0.134, 0.134, 0.134, 0.133 },
     {0.375, 0.358, 0.343, 0.329, 0.317, 0.307, 0.297, 0.289, 0.281, 0.273, 0.267, 0.26, 0.255, 0.249, 0.244, 0.24, 0.235, 0.231, 0.227, 0.224, 0.22, 0.217, 0.214, 0.211, 0.209, 0.206, 0.203, 0.201, 0.199, 0.197, 0.195, 0.193, 0.191, 0.189, 0.187, 0.186, 0.184, 0.182, 0.181, 0.18, 0.178, 0.177, 0.176, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.162, 0.161, 0.161, 0.16, 0.159, 0.158, 0.158, 0.157, 0.156, 0.156, 0.155, 0.154, 0.154, 0.153, 0.152, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.136, 0.136, 0.136, 0.135 },
     {0.375, 0.357, 0.342, 0.329, 0.317, 0.307, 0.297, 0.288, 0.28, 0.273, 0.266, 0.26, 0.254, 0.249, 0.244, 0.239, 0.235, 0.231, 0.227, 0.224, 0.22, 0.217, 0.214, 0.211, 0.208, 0.206, 0.203, 0.201, 0.198, 0.196, 0.194, 0.192, 0.19, 0.189, 0.187, 0.185, 0.184, 0.182, 0.181, 0.179, 0.178, 0.177, 0.175, 0.174, 0.173, 0.172, 0.171, 0.169, 0.168, 0.167, 0.166, 0.165, 0.165, 0.164, 0.163, 0.162, 0.161, 0.16, 0.16, 0.159, 0.158, 0.157, 0.157, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.136, 0.136, 0.136, 0.135, 0.135 },
     {0.376, 0.359, 0.344, 0.33, 0.319, 0.308, 0.298, 0.29, 0.282, 0.274, 0.268, 0.261, 0.256, 0.25, 0.245, 0.241, 0.236, 0.232, 0.228, 0.225, 0.221, 0.218, 0.215, 0.212, 0.21, 0.207, 0.204, 0.202, 0.2, 0.198, 0.196, 0.194, 0.192, 0.19, 0.188, 0.187, 0.185, 0.183, 0.182, 0.181, 0.179, 0.178, 0.177, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.159, 0.159, 0.158, 0.157, 0.157, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.151, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.136 },
     {0.372, 0.355, 0.34, 0.326, 0.315, 0.304, 0.295, 0.286, 0.278, 0.271, 0.264, 0.258, 0.252, 0.247, 0.242, 0.237, 0.233, 0.229, 0.225, 0.221, 0.218, 0.215, 0.211, 0.209, 0.206, 0.203, 0.201, 0.198, 0.196, 0.194, 0.192, 0.19, 0.188, 0.186, 0.185, 0.183, 0.181, 0.18, 0.178, 0.177, 0.175, 0.174, 0.173, 0.172, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.162, 0.161, 0.16, 0.16, 0.159, 0.158, 0.157, 0.156, 0.156, 0.155, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.15, 0.15, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.136, 0.136, 0.136, 0.135, 0.135, 0.135, 0.134, 0.134, 0.134, 0.133, 0.133, 0.133 },
     {0.374, 0.357, 0.342, 0.328, 0.316, 0.306, 0.296, 0.288, 0.28, 0.272, 0.266, 0.26, 0.254, 0.248, 0.243, 0.239, 0.234, 0.23, 0.227, 0.223, 0.219, 0.216, 0.213, 0.21, 0.208, 0.205, 0.202, 0.2, 0.198, 0.196, 0.194, 0.192, 0.19, 0.188, 0.186, 0.185, 0.183, 0.182, 0.18, 0.179, 0.177, 0.176, 0.175, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.162, 0.161, 0.16, 0.16, 0.159, 0.158, 0.157, 0.157, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.136, 0.136, 0.136, 0.135, 0.135, 0.135, 0.135 },
     {0.375, 0.357, 0.342, 0.329, 0.317, 0.307, 0.297, 0.288, 0.28, 0.273, 0.266, 0.26, 0.254, 0.249, 0.244, 0.239, 0.235, 0.231, 0.227, 0.224, 0.22, 0.217, 0.214, 0.211, 0.208, 0.206, 0.203, 0.201, 0.199, 0.196, 0.194, 0.192, 0.19, 0.189, 0.187, 0.185, 0.184, 0.182, 0.181, 0.179, 0.178, 0.177, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.168, 0.167, 0.166, 0.166, 0.165, 0.164, 0.163, 0.162, 0.161, 0.16, 0.16, 0.159, 0.158, 0.157, 0.157, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.136, 0.136, 0.136, 0.135, 0.135 },
     {0.376, 0.358, 0.343, 0.33, 0.318, 0.307, 0.298, 0.289, 0.281, 0.274, 0.267, 0.261, 0.255, 0.25, 0.245, 0.24, 0.236, 0.232, 0.228, 0.224, 0.221, 0.218, 0.214, 0.212, 0.209, 0.206, 0.204, 0.201, 0.199, 0.197, 0.195, 0.193, 0.191, 0.189, 0.188, 0.186, 0.184, 0.183, 0.181, 0.18, 0.179, 0.177, 0.176, 0.175, 0.174, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.163, 0.162, 0.161, 0.16, 0.159, 0.159, 0.158, 0.157, 0.157, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.136, 0.136, 0.136 },
     {0.375, 0.358, 0.343, 0.329, 0.318, 0.307, 0.297, 0.289, 0.281, 0.273, 0.267, 0.261, 0.255, 0.249, 0.245, 0.24, 0.236, 0.231, 0.228, 0.224, 0.221, 0.217, 0.214, 0.211, 0.209, 0.206, 0.204, 0.201, 0.199, 0.197, 0.195, 0.193, 0.191, 0.189, 0.187, 0.186, 0.184, 0.183, 0.181, 0.18, 0.178, 0.177, 0.176, 0.175, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.159, 0.158, 0.158, 0.157, 0.156, 0.156, 0.155, 0.154, 0.154, 0.153, 0.152, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.136, 0.136, 0.136, 0.136 },
     {0.376, 0.359, 0.344, 0.33, 0.318, 0.308, 0.298, 0.289, 0.281, 0.274, 0.267, 0.261, 0.255, 0.25, 0.245, 0.241, 0.236, 0.232, 0.228, 0.225, 0.221, 0.218, 0.215, 0.212, 0.209, 0.207, 0.204, 0.202, 0.2, 0.197, 0.195, 0.193, 0.192, 0.19, 0.188, 0.186, 0.185, 0.183, 0.182, 0.18, 0.179, 0.178, 0.176, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.162, 0.161, 0.161, 0.16, 0.159, 0.158, 0.158, 0.157, 0.156, 0.156, 0.155, 0.154, 0.154, 0.153, 0.153, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138, 0.137, 0.137, 0.137, 0.137, 0.136 },
     {0.378, 0.361, 0.346, 0.332, 0.32, 0.31, 0.3, 0.291, 0.283, 0.276, 0.269, 0.263, 0.257, 0.252, 0.247, 0.242, 0.238, 0.234, 0.23, 0.227, 0.223, 0.22, 0.217, 0.214, 0.211, 0.209, 0.206, 0.204, 0.202, 0.199, 0.197, 0.195, 0.194, 0.192, 0.19, 0.188, 0.187, 0.185, 0.184, 0.182, 0.181, 0.18, 0.178, 0.177, 0.176, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.164, 0.163, 0.163, 0.162, 0.161, 0.16, 0.16, 0.159, 0.158, 0.158, 0.157, 0.156, 0.156, 0.155, 0.154, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.144, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138, 0.138 },
     {0.379, 0.361, 0.346, 0.333, 0.321, 0.31, 0.3, 0.292, 0.284, 0.276, 0.27, 0.263, 0.258, 0.252, 0.247, 0.243, 0.238, 0.234, 0.23, 0.227, 0.223, 0.22, 0.217, 0.214, 0.212, 0.209, 0.206, 0.204, 0.202, 0.2, 0.198, 0.196, 0.194, 0.192, 0.19, 0.189, 0.187, 0.186, 0.184, 0.183, 0.181, 0.18, 0.179, 0.177, 0.176, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.165, 0.164, 0.163, 0.162, 0.161, 0.161, 0.16, 0.159, 0.159, 0.158, 0.157, 0.157, 0.156, 0.155, 0.155, 0.154, 0.154, 0.153, 0.153, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139, 0.139, 0.139, 0.138 },
     {0.378, 0.36, 0.345, 0.332, 0.32, 0.309, 0.3, 0.291, 0.283, 0.276, 0.269, 0.263, 0.257, 0.252, 0.247, 0.242, 0.238, 0.234, 0.23, 0.226, 0.223, 0.219, 0.216, 0.213, 0.211, 0.208, 0.206, 0.203, 0.201, 0.199, 0.197, 0.195, 0.193, 0.191, 0.19, 0.188, 0.186, 0.185, 0.183, 0.182, 0.18, 0.179, 0.178, 0.177, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.165, 0.165, 0.164, 0.163, 0.162, 0.161, 0.161, 0.16, 0.159, 0.158, 0.158, 0.157, 0.156, 0.156, 0.155, 0.155, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.139, 0.139, 0.139, 0.139, 0.138, 0.138, 0.138 },
     {0.38, 0.362, 0.347, 0.334, 0.322, 0.311, 0.301, 0.293, 0.285, 0.277, 0.271, 0.265, 0.259, 0.253, 0.248, 0.244, 0.239, 0.235, 0.232, 0.228, 0.225, 0.221, 0.218, 0.215, 0.213, 0.21, 0.208, 0.205, 0.203, 0.201, 0.199, 0.197, 0.195, 0.193, 0.191, 0.19, 0.188, 0.187, 0.185, 0.184, 0.182, 0.181, 0.18, 0.179, 0.177, 0.176, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.168, 0.167, 0.166, 0.166, 0.165, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.16, 0.159, 0.158, 0.158, 0.157, 0.156, 0.156, 0.155, 0.155, 0.154, 0.154, 0.153, 0.153, 0.152, 0.151, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.146, 0.146, 0.146, 0.145, 0.145, 0.144, 0.144, 0.144, 0.143, 0.143, 0.143, 0.142, 0.142, 0.142, 0.141, 0.141, 0.141, 0.14, 0.14, 0.14, 0.139 },
     {0.382, 0.364, 0.349, 0.335, 0.323, 0.312, 0.303, 0.294, 0.286, 0.279, 0.272, 0.266, 0.26, 0.255, 0.25, 0.245, 0.241, 0.237, 0.233, 0.229, 0.226, 0.223, 0.22, 0.217, 0.214, 0.211, 0.209, 0.206, 0.204, 0.202, 0.2, 0.198, 0.196, 0.194, 0.193, 0.191, 0.189, 0.188, 0.186, 0.185, 0.184, 0.182, 0.181, 0.18, 0.179, 0.177, 0.176, 0.175, 0.174, 0.173, 0.172, 0.171, 0.17, 0.169, 0.169, 0.168, 0.167, 0.166, 0.165, 0.165, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.16, 0.159, 0.158, 0.158, 0.157, 0.157, 0.156, 0.155, 0.155, 0.154, 0.154, 0.153, 0.153, 0.152, 0.152, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.149, 0.148, 0.148, 0.147, 0.147, 0.147, 0.146, 0.146, 0.145, 0.145, 0.145, 0.144, 0.144, 0.144, 0.143, 0.143, 0.142, 0.142, 0.142, 0.142, 0.141, 0.141, 0.141 },
     {0.387, 0.369, 0.354, 0.34, 0.328, 0.317, 0.308, 0.299, 0.291, 0.283, 0.277, 0.27, 0.265, 0.259, 0.254, 0.25, 0.245, 0.241, 0.237, 0.234, 0.23, 0.227, 0.224, 0.221, 0.219, 0.216, 0.213, 0.211, 0.209, 0.207, 0.205, 0.203, 0.201, 0.199, 0.197, 0.196, 0.194, 0.193, 0.191, 0.19, 0.188, 0.187, 0.186, 0.184, 0.183, 0.182, 0.181, 0.18, 0.179, 0.178, 0.177, 0.176, 0.175, 0.174, 0.173, 0.172, 0.171, 0.171, 0.17, 0.169, 0.168, 0.168, 0.167, 0.166, 0.165, 0.165, 0.164, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.16, 0.159, 0.159, 0.158, 0.158, 0.157, 0.157, 0.156, 0.156, 0.155, 0.155, 0.154, 0.154, 0.153, 0.153, 0.153, 0.152, 0.152, 0.151, 0.151, 0.151, 0.15, 0.15, 0.149, 0.149, 0.149, 0.148, 0.148, 0.148, 0.147, 0.147, 0.147, 0.146, 0.146, 0.146, 0.145, 0.145 },
     {0.386, 0.368, 0.353, 0.339, 0.327, 0.317, 0.307, 0.298, 0.29, 0.283, 0.276, 0.27, 0.264, 0.259, 0.254, 0.249, 0.245, 0.241, 0.237, 0.233, 0.23, 0.227, 0.224, 0.221, 0.218, 0.215, 0.213, 0.211, 0.208, 0.206, 0.204, 0.202, 0.2, 0.198, 0.197, 0.195, 0.194, 0.192, 0.191, 0.189, 0.188, 0.186, 0.185, 0.184, 0.183, 0.182, 0.18, 0.179, 0.178, 0.177, 0.176, 0.175, 0.174, 0.173, 0.173, 0.172, 0.171, 0.17, 0.169, 0.169, 0.168, 0.167, 0.166, 0.166, 0.165, 0.164, 0.164, 0.163, 0.162, 0.162, 0.161, 0.16, 0.16, 0.159, 0.159, 0.158, 0.158, 0.157, 0.157, 0.156, 0.156, 0.155, 0.155, 0.154, 0.154, 0.153, 0.153, 0.152, 0.152, 0.152, 0.151, 0.151, 0.15, 0.15, 0.15, 0.149, 0.149, 0.148, 0.148, 0.148, 0.147, 0.147, 0.147, 0.146, 0.146, 0.146, 0.145, 0.145, 0.145, 0.144 },
     {0.393, 0.375, 0.359, 0.345, 0.333, 0.322, 0.313, 0.304, 0.296, 0.289, 0.282, 0.276, 0.27, 0.264, 0.259, 0.255, 0.25, 0.246, 0.242, 0.239, 0.235, 0.232, 0.229, 0.226, 0.224, 0.221, 0.219, 0.216, 0.214, 0.212, 0.21, 0.208, 0.206, 0.204, 0.202, 0.201, 0.199, 0.198, 0.196, 0.195, 0.193, 0.192, 0.191, 0.19, 0.188, 0.187, 0.186, 0.185, 0.184, 0.183, 0.182, 0.181, 0.18, 0.179, 0.178, 0.177, 0.176, 0.176, 0.175, 0.174, 0.173, 0.173, 0.172, 0.171, 0.17, 0.17, 0.169, 0.168, 0.168, 0.167, 0.167, 0.166, 0.165, 0.165, 0.164, 0.164, 0.163, 0.163, 0.162, 0.162, 0.161, 0.161, 0.16, 0.16, 0.159, 0.159, 0.158, 0.158, 0.157, 0.157, 0.157, 0.156, 0.156, 0.155, 0.155, 0.155, 0.154, 0.154, 0.153, 0.153, 0.153, 0.152, 0.152, 0.152, 0.151, 0.151, 0.151, 0.15, 0.15, 0.15 },
     {0.397, 0.379, 0.363, 0.349, 0.337, 0.326, 0.317, 0.308, 0.3, 0.292, 0.285, 0.279, 0.273, 0.268, 0.263, 0.258, 0.254, 0.25, 0.246, 0.243, 0.239, 0.236, 0.233, 0.23, 0.227, 0.225, 0.222, 0.22, 0.218, 0.216, 0.214, 0.212, 0.21, 0.208, 0.206, 0.204, 0.203, 0.201, 0.2, 0.198, 0.197, 0.196, 0.194, 0.193, 0.192, 0.191, 0.19, 0.189, 0.188, 0.187, 0.186, 0.185, 0.184, 0.183, 0.182, 0.181, 0.18, 0.179, 0.178, 0.178, 0.177, 0.176, 0.175, 0.175, 0.174, 0.173, 0.173, 0.172, 0.171, 0.171, 0.17, 0.17, 0.169, 0.168, 0.168, 0.167, 0.167, 0.166, 0.166, 0.165, 0.165, 0.164, 0.164, 0.163, 0.163, 0.162, 0.162, 0.161, 0.161, 0.16, 0.16, 0.16, 0.159, 0.159, 0.158, 0.158, 0.158, 0.157, 0.157, 0.156, 0.156, 0.156, 0.155, 0.155, 0.155, 0.154, 0.154, 0.154, 0.153, 0.153 },
     {0.407, 0.389, 0.373, 0.359, 0.347, 0.336, 0.326, 0.317, 0.309, 0.302, 0.295, 0.289, 0.283, 0.277, 0.272, 0.268, 0.263, 0.259, 0.256, 0.252, 0.249, 0.245, 0.242, 0.239, 0.237, 0.234, 0.232, 0.229, 0.227, 0.225, 0.223, 0.221, 0.219, 0.217, 0.215, 0.214, 0.212, 0.211, 0.209, 0.208, 0.206, 0.205, 0.204, 0.202, 0.201, 0.2, 0.199, 0.198, 0.197, 0.196, 0.195, 0.194, 0.193, 0.192, 0.191, 0.19, 0.189, 0.188, 0.187, 0.187, 0.186, 0.185, 0.184, 0.184, 0.183, 0.182, 0.182, 0.181, 0.18, 0.18, 0.179, 0.178, 0.178, 0.177, 0.177, 0.176, 0.175, 0.175, 0.174, 0.174, 0.173, 0.173, 0.172, 0.172, 0.171, 0.171, 0.17, 0.17, 0.169, 0.169, 0.169, 0.168, 0.168, 0.167, 0.167, 0.166, 0.166, 0.166, 0.165, 0.165, 0.165, 0.164, 0.164, 0.163, 0.163, 0.163, 0.162, 0.162, 0.162, 0.161 },
     {0.422, 0.403, 0.387, 0.373, 0.361, 0.35, 0.34, 0.331, 0.323, 0.315, 0.308, 0.302, 0.296, 0.291, 0.286, 0.281, 0.277, 0.273, 0.269, 0.265, 0.262, 0.258, 0.255, 0.253, 0.25, 0.247, 0.245, 0.242, 0.24, 0.238, 0.236, 0.234, 0.232, 0.23, 0.228, 0.227, 0.225, 0.224, 0.222, 0.221, 0.219, 0.218, 0.217, 0.215, 0.214, 0.213, 0.212, 0.211, 0.209, 0.208, 0.207, 0.206, 0.205, 0.204, 0.203, 0.203, 0.202, 0.201, 0.2, 0.199, 0.198, 0.198, 0.197, 0.196, 0.195, 0.195, 0.194, 0.193, 0.193, 0.192, 0.191, 0.191, 0.19, 0.189, 0.189, 0.188, 0.188, 0.187, 0.187, 0.186, 0.185, 0.185, 0.184, 0.184, 0.183, 0.183, 0.182, 0.182, 0.181, 0.181, 0.181, 0.18, 0.18, 0.179, 0.179, 0.178, 0.178, 0.178, 0.177, 0.177, 0.176, 0.176, 0.176, 0.175, 0.175, 0.175, 0.174, 0.174, 0.173, 0.173 },
     {0.445, 0.426, 0.409, 0.395, 0.383, 0.371, 0.361, 0.352, 0.344, 0.336, 0.329, 0.323, 0.317, 0.312, 0.307, 0.302, 0.298, 0.294, 0.29, 0.286, 0.283, 0.279, 0.276, 0.273, 0.271, 0.268, 0.265, 0.263, 0.261, 0.259, 0.256, 0.254, 0.252, 0.251, 0.249, 0.247, 0.245, 0.244, 0.242, 0.241, 0.239, 0.238, 0.237, 0.235, 0.234, 0.233, 0.232, 0.23, 0.229, 0.228, 0.227, 0.226, 0.225, 0.224, 0.223, 0.222, 0.221, 0.22, 0.22, 0.219, 0.218, 0.217, 0.216, 0.215, 0.215, 0.214, 0.213, 0.212, 0.212, 0.211, 0.21, 0.21, 0.209, 0.208, 0.208, 0.207, 0.207, 0.206, 0.205, 0.205, 0.204, 0.204, 0.203, 0.203, 0.202, 0.202, 0.201, 0.201, 0.2, 0.2, 0.199, 0.199, 0.198, 0.198, 0.197, 0.197, 0.197, 0.196, 0.196, 0.195, 0.195, 0.194, 0.194, 0.194, 0.193, 0.193, 0.193, 0.192, 0.192, 0.191 },
     {0.471, 0.452, 0.435, 0.421, 0.408, 0.397, 0.386, 0.377, 0.369, 0.361, 0.354, 0.348, 0.342, 0.336, 0.331, 0.327, 0.322, 0.318, 0.314, 0.31, 0.307, 0.303, 0.3, 0.297, 0.295, 0.292, 0.289, 0.287, 0.285, 0.282, 0.28, 0.278, 0.276, 0.274, 0.272, 0.271, 0.269, 0.267, 0.266, 0.264, 0.263, 0.261, 0.26, 0.258, 0.257, 0.256, 0.255, 0.253, 0.252, 0.251, 0.25, 0.249, 0.248, 0.247, 0.246, 0.245, 0.244, 0.243, 0.242, 0.241, 0.24, 0.239, 0.239, 0.238, 0.237, 0.236, 0.235, 0.235, 0.234, 0.233, 0.232, 0.232, 0.231, 0.23, 0.23, 0.229, 0.229, 0.228, 0.227, 0.227, 0.226, 0.226, 0.225, 0.224, 0.224, 0.223, 0.223, 0.222, 0.222, 0.221, 0.221, 0.22, 0.22, 0.219, 0.219, 0.218, 0.218, 0.218, 0.217, 0.217, 0.216, 0.216, 0.215, 0.215, 0.215, 0.214, 0.214, 0.213, 0.213, 0.213 },
     {0.519, 0.499, 0.482, 0.468, 0.455, 0.443, 0.433, 0.424, 0.415, 0.407, 0.4, 0.394, 0.388, 0.382, 0.377, 0.372, 0.367, 0.363, 0.359, 0.355, 0.352, 0.348, 0.345, 0.342, 0.339, 0.336, 0.334, 0.331, 0.329, 0.326, 0.324, 0.322, 0.32, 0.318, 0.316, 0.314, 0.312, 0.31, 0.309, 0.307, 0.305, 0.304, 0.302, 0.301, 0.3, 0.298, 0.297, 0.296, 0.294, 0.293, 0.292, 0.291, 0.29, 0.289, 0.287, 0.286, 0.285, 0.284, 0.283, 0.282, 0.282, 0.281, 0.28, 0.279, 0.278, 0.277, 0.276, 0.276, 0.275, 0.274, 0.273, 0.273, 0.272, 0.271, 0.27, 0.27, 0.269, 0.268, 0.268, 0.267, 0.266, 0.266, 0.265, 0.265, 0.264, 0.263, 0.263, 0.262, 0.262, 0.261, 0.261, 0.26, 0.26, 0.259, 0.259, 0.258, 0.258, 0.257, 0.257, 0.256, 0.256, 0.255, 0.255, 0.254, 0.254, 0.254, 0.253, 0.253, 0.252, 0.252 },
     {0.563, 0.543, 0.526, 0.511, 0.498, 0.486, 0.476, 0.466, 0.458, 0.45, 0.443, 0.436, 0.43, 0.424, 0.419, 0.414, 0.409, 0.405, 0.401, 0.397, 0.393, 0.389, 0.386, 0.383, 0.38, 0.377, 0.374, 0.371, 0.369, 0.366, 0.364, 0.362, 0.36, 0.358, 0.356, 0.354, 0.352, 0.35, 0.348, 0.346, 0.345, 0.343, 0.342, 0.34, 0.339, 0.337, 0.336, 0.335, 0.333, 0.332, 0.331, 0.329, 0.328, 0.327, 0.326, 0.325, 0.324, 0.323, 0.322, 0.321, 0.32, 0.319, 0.318, 0.317, 0.316, 0.315, 0.314, 0.314, 0.313, 0.312, 0.311, 0.31, 0.31, 0.309, 0.308, 0.307, 0.307, 0.306, 0.305, 0.305, 0.304, 0.303, 0.303, 0.302, 0.301, 0.301, 0.3, 0.3, 0.299, 0.298, 0.298, 0.297, 0.297, 0.296, 0.296, 0.295, 0.295, 0.294, 0.294, 0.293, 0.293, 0.292, 0.292, 0.291, 0.291, 0.29, 0.29, 0.289, 0.289, 0.289}};


  if (t_drift < 0)
    return true;

  // Allow everything below 10pe
  if (total_s1 < 10)
    return false;
  
  // First, find which of the 37 tdrift slices this event belongs in. If tdrift > 370, use last tdrift slice.
  int t_drift_slice = -1;
  if (t_drift > 370)
    t_drift_slice = 36;
  else
    t_drift_slice = TMath::Floor(t_drift/10.);

  // Then find the total_s1 slice that this event belongs in.
  int total_s1_slice = -1;
  if (total_s1 > 120)
    total_s1_slice = 109;
  else
    total_s1_slice = TMath::Floor(total_s1)-10;


  // Extract the corresponding threshold value
  double threshold = max_s1_frac_thresholds[t_drift_slice][total_s1_slice];


  // Decide whether this event passes
  if (max_s1/total_s1 > threshold)
    return true;
  
  return false;
}


  
Bool_t AddFile2Chain(TString Inputfilelist, TChain &chain){
  Bool_t IsChained(false);
  ifstream inputStream(Inputfilelist.Data());
  if (!inputStream.is_open()) {
    cout << "can not open list file"<< endl;
    return false;
  }
  cout<<"Open file list: "<<Inputfilelist.Data()<<endl;

  char line[512];
  for (; inputStream.good();) {
    inputStream.getline(line, 512);
    if (!inputStream.good()) continue;

    TFile *ftmp = new TFile(line);
    //----------
    if (!(ftmp->IsOpen())){
      cout << line << " open failed ! not chained" << endl;
      continue;
    }
    if (ftmp->IsZombie()) {
      cout << "sth. very wrong with " << line << ", not chained " << endl;
      continue;
    }
    if (ftmp->TestBit(1024)) {
      cout << "revocer procedure applied to " << line << endl;
      continue;
    }
    //--------------------------
    if (ftmp && ftmp->IsOpen() && ftmp->GetNkeys()) {
      cout << "add file " << line << endl;
      chain.Add(line);
      IsChained=true;
    } else {
      cout << " cannot open file " << line << endl;
    }
    delete ftmp;
  }
  return IsChained;
}
#endif
